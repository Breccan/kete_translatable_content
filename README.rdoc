= kete_translatable_content

Kete Translatable Content is a gem that is an add-on for Kete web applications that takes advantage of the mongo_translatable gem's functionality. As you would expect, you use it to add the ability to translate content in your Kete web site.

== Usage

Currently only tested against Rails 2.3.5.  When Kete moves to Rails 3, this gem will be updated to.

First install the needed things:

gem install mongo_translatable kete_translatable_content

After installing the gem do the following to add kete_translatable_content to you app:

in config/environment.rb:

...
Rails::Initializer.run do |config|
...
# add the ability to translate Kete content, by declaring dependency on the gem
config.gem "mongo_translatable"
config.gem "kete_translatable_content"
...
end

# Configure Kete Content Translation
# This needs to run after the initalizer.run block.
# It's best if it is the last thing in the the environment.rb file.
if IS_CONFIGURED
   require 'configure_kete_content_translation'

   include ConfigureKeteContentTranslation

   extend_with_translatable_attributes(Basket, :name)
end

# name your MongoDB database
MongoMapper.database = 'your_app'

Now you need to run the migration generator to add the columns that kete_translatable_content needs to work. Do this in your Kete application's root directory.

$ script/generate kete_translatable_content_migration
$ rake db:migrate # add environment if necessary, i.e. rake db:migrate RAILS_ENV=production

It's a good idea to generate the tests and run them before proceeding:

$ script/generate kete_translatable_content_tests # Kete has some issues with overall testing, so we'll run these one by one
$ cd test
$ ruby unit/kete_translatable_content_migration_test.rb
...
$ ruby unit/configure_kete_content_translation_test.rb
...
$ ruby unit/helpers/kete_translatable_content_helper_test.rb
...
$ ruby functional/configure_kete_content_translation_controller_and_routes_test.rb
...
$ ruby integration/kete_translations_test.rb

If the tests run ok and you are ready to start playing with the functionality from the web interface,
you'll probably want to set legacy data's locale appropriately:

$ rake kete_translatable_content:update_with_default_locale # usual enviroment setting rules here, too

Restart your application and it should be ready to use.

Your tests should also now include testing for the kete_translatable_content add-on.


== Note on Patches/Pull Requests

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright (c) 2010 Walter McGinnis. See LICENSE for details.
